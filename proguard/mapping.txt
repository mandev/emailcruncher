com.adlitteram.emailcruncher.ActionController -> x:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    javax.swing.InputMap inputMap -> a
    javax.swing.ActionMap actionMap -> a
    void addAction(com.adlitteram.emailcruncher.actions.XAction) -> a
    com.adlitteram.emailcruncher.actions.XAction getAction(java.lang.String) -> a
com.adlitteram.emailcruncher.Cruncher -> v:
    java.util.prefs.Preferences prefs -> a
    java.beans.PropertyChangeSupport propertyChangeSupport -> a
    javax.swing.DefaultListModel emailListModel -> a
    java.util.ArrayList urlToSearch -> a
    java.util.ArrayList threadVector -> b
    int threadCount -> a
    int stoppedCount -> b
    int emailCount -> c
    long startTime -> a
    int searchLimit -> d
    java.lang.String urlFilter -> a
    java.lang.String pageFilter -> b
    java.lang.String emailFilter -> c
    java.util.regex.Pattern urlFilterPattern -> a
    java.util.regex.Pattern emailFilterPattern -> b
    boolean useRobots -> a
    int inLinkDepth -> e
    int outLinkDepth -> f
    int timeOut -> g
    int threadMax -> h
    boolean useProxy -> b
    java.lang.String proxyHost -> d
    int proxyPort -> i
    java.net.Proxy proxy -> a
    int status -> j
    void init() -> a
    void updatePreferences() -> b
    void addUrlToSearch(com.adlitteram.emailcruncher.ExtURL) -> a
    int removeScanningThreads() -> h
    com.adlitteram.emailcruncher.ExtURL getUrlToSearch() -> a
    void syncNotify() -> c
    void run() -> run
    void start(java.net.URL) -> a
    void stop() -> d
    void addPropertyChangeListener(java.beans.PropertyChangeListener) -> a
    int getTimeOut() -> a
    void setTimeOut(int) -> a
    boolean isUseProxy() -> a
    void setUseProxy(boolean) -> a
    int getThreadMax() -> b
    void setThreadMax(int) -> b
    java.lang.String getProxyHost() -> a
    void setProxyHost(java.lang.String) -> a
    int getProxyPort() -> c
    void setProxyPort(int) -> c
    javax.swing.DefaultListModel getEmailListModel() -> a
    int getStatus() -> d
    void setStatus(int) -> d
    java.lang.String getUrlFilter() -> b
    void setUrlFilter(java.lang.String) -> b
    java.lang.String getPageFilter() -> c
    void setPageFilter(java.lang.String) -> c
    java.lang.String getEmailFilter() -> d
    void setEmailFilter(java.lang.String) -> d
    int getSearchLimit() -> e
    void setSearchLimit(int) -> e
    boolean isUseRobots() -> b
    void setUseRobots(boolean) -> b
    int getInLinkDepth() -> f
    void setInLinkDepth(int) -> f
    int getOutLinkDepth() -> g
    void setOutLinkDepth(int) -> g
    java.util.regex.Pattern getUrlFilterPattern() -> a
    java.util.regex.Pattern getEmailFilterPattern() -> b
    java.net.Proxy getProxy() -> a
    void setEmailCount(int) -> h
    void incEmailCount() -> e
    void decEmailCount() -> f
com.adlitteram.emailcruncher.EmailSyntaxValidator -> I:
    boolean debugging -> a
    java.util.regex.Pattern p9 -> a
    java.util.regex.Pattern splitter -> b
    java.util.regex.Pattern p5 -> c
    java.util.regex.Pattern p4 -> d
    java.util.regex.Pattern p3 -> e
    java.lang.String thisCountry -> a
    java.util.HashSet officialTLDs -> a
    java.util.HashSet rareTLDs -> b
    java.util.HashSet nationalTLDs -> c
    java.util.HashSet badTLDs -> d
    int howValid(java.lang.String) -> a
    java.util.HashSet hmaker(java.lang.String[]) -> a
com.adlitteram.emailcruncher.ExtURL -> s:
    java.net.URL url -> a
    java.net.URL initUrl -> b
    int inLinkCount -> a
    int outLinkCount -> b
    java.net.URL getUrl() -> a
    int getInLinkCount() -> a
    int getOutLinkCount() -> b
    com.adlitteram.emailcruncher.ExtURL concatURL(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    boolean isLocal() -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
com.adlitteram.emailcruncher.Main -> com.adlitteram.emailcruncher.Main:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    com.adlitteram.emailcruncher.gui.MainFrame mainframe -> a
    com.adlitteram.emailcruncher.ActionController controller -> a
    com.adlitteram.emailcruncher.gui.MainFrame getMainframe() -> a
    void quit() -> a
    void main(java.lang.String[]) -> main
    com.adlitteram.emailcruncher.gui.MainFrame access$002(com.adlitteram.emailcruncher.gui.MainFrame) -> a
    com.adlitteram.emailcruncher.Cruncher access$100() -> a
    com.adlitteram.emailcruncher.ActionController access$200() -> a
com.adlitteram.emailcruncher.Main$1 -> d:
    void run() -> run
com.adlitteram.emailcruncher.Message -> l:
    java.lang.String baseName -> a
    java.util.ResourceBundle resource -> a
    java.lang.String get(java.lang.String) -> a
com.adlitteram.emailcruncher.ScanningThread -> o:
    java.util.regex.Pattern EMAIL_PATTERN -> a
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    com.adlitteram.emailcruncher.ExtURL url -> a
    int status -> a
    long time -> a
    void run() -> run
    int searchEmail(java.lang.String) -> a
    int searchURL(java.lang.String,com.adlitteram.emailcruncher.ExtURL) -> a
    boolean isRobotAllowed(com.adlitteram.emailcruncher.ExtURL) -> a
    int getStatus() -> a
    void setStatus(int) -> a
    long getTime() -> a
    com.adlitteram.emailcruncher.ExtURL getUrl() -> a
    com.adlitteram.emailcruncher.Cruncher access$000(com.adlitteram.emailcruncher.ScanningThread) -> a
com.adlitteram.emailcruncher.ScanningThread$1 -> H:
    java.lang.String val$address -> a
    com.adlitteram.emailcruncher.ScanningThread this$0 -> a
    void run() -> run
com.adlitteram.emailcruncher.actions.About -> G:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.actions.ClearEmails -> F:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.actions.ExportEmails -> u:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    java.util.prefs.Preferences prefs -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.lang.String getSuffix(java.lang.String) -> a
    void exportToTxt(java.lang.String) -> a
com.adlitteram.emailcruncher.actions.RemoveDupEmails -> g:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.actions.Settings -> c:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.actions.SortEmails -> D:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.actions.ValidateEmails -> E:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.actions.XAction -> B:
    java.lang.String getName() -> a
com.adlitteram.emailcruncher.gui.AboutDialog -> J:
    javax.swing.JLabel jLabel1 -> a
    javax.swing.JLabel jLabel2 -> b
    javax.swing.JLabel jLabel3 -> c
    org.jdesktop.swingx.JXHyperlink jXHyperlink1 -> a
    void initComponents() -> a
    void execBrowser(java.awt.event.ActionEvent) -> a
    void access$000(com.adlitteram.emailcruncher.gui.AboutDialog,java.awt.event.ActionEvent) -> a
com.adlitteram.emailcruncher.gui.AboutDialog$1 -> r:
    com.adlitteram.emailcruncher.gui.AboutDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.gui.MainFrame -> m:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    com.adlitteram.emailcruncher.ActionController controller -> a
    org.jdesktop.swingx.JXHyperlink About -> a
    javax.swing.JButton clearEmailsButton -> a
    javax.swing.JLabel emailCountLabel -> a
    javax.swing.JLabel emailLabel -> b
    javax.swing.JList emailsList -> a
    javax.swing.JScrollPane emailsScrollPane -> a
    javax.swing.JButton exportToButton -> b
    javax.swing.JButton goButton -> c
    javax.swing.JComboBox inDepthCombo -> a
    javax.swing.JLabel inDepthLabel -> c
    javax.swing.JPanel jPanel1 -> a
    javax.swing.JSplitPane jSplitPane1 -> a
    javax.swing.JComboBox limitCombo -> b
    javax.swing.JLabel limitLabel -> d
    javax.swing.JTextArea logArea -> a
    javax.swing.JScrollPane logScrollPane -> b
    javax.swing.JLabel logWindowLabel -> e
    javax.swing.JPanel optionPanel -> b
    javax.swing.JComboBox outDepthCombo -> c
    javax.swing.JLabel outDepthLabel -> f
    javax.swing.JCheckBox robotsCheck -> a
    javax.swing.JButton settingsButton -> d
    javax.swing.JTextField skipEmailField -> a
    javax.swing.JLabel skipEmailLabel -> g
    javax.swing.JTextField skipPageField -> b
    javax.swing.JLabel skipPageLabel -> h
    javax.swing.JTextField skipUrlField -> c
    javax.swing.JLabel skipUrlLabel -> i
    javax.swing.JButton sortEmailsButton -> e
    javax.swing.JButton stopButton -> f
    javax.swing.JComboBox urlCombo -> d
    javax.swing.JLabel urlLabel -> j
    javax.swing.JButton validateEmailsButton -> g
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void updateGuiStatus(int) -> a
    void initComponents() -> a
    void formWindowClosing(java.awt.event.WindowEvent) -> a
    void stopButtonActionPerformed(java.awt.event.ActionEvent) -> a
    void goButtonActionPerformed(java.awt.event.ActionEvent) -> b
    void access$000(com.adlitteram.emailcruncher.gui.MainFrame,int) -> a
    void access$100(com.adlitteram.emailcruncher.gui.MainFrame,java.awt.event.WindowEvent) -> a
    void access$200(com.adlitteram.emailcruncher.gui.MainFrame,java.awt.event.ActionEvent) -> a
    void access$300(com.adlitteram.emailcruncher.gui.MainFrame,java.awt.event.ActionEvent) -> b
com.adlitteram.emailcruncher.gui.MainFrame$1 -> h:
    int val$status -> a
    com.adlitteram.emailcruncher.gui.MainFrame this$0 -> a
    void run() -> run
com.adlitteram.emailcruncher.gui.MainFrame$2 -> i:
    com.adlitteram.emailcruncher.gui.MainFrame this$0 -> a
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
com.adlitteram.emailcruncher.gui.MainFrame$3 -> e:
    com.adlitteram.emailcruncher.gui.MainFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.gui.MainFrame$4 -> f:
    com.adlitteram.emailcruncher.gui.MainFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.gui.SettingsDialog -> z:
    com.adlitteram.emailcruncher.Cruncher cruncher -> a
    javax.swing.JButton cancelButton -> a
    javax.swing.JPanel jPanel1 -> a
    javax.swing.JPanel jPanel2 -> b
    javax.swing.JButton okButton -> b
    javax.swing.JLabel proxyAddressLabel -> a
    javax.swing.JTextField proxyHostField -> a
    javax.swing.JTextField proxyPortField -> b
    javax.swing.JLabel proxyPortLabel -> b
    javax.swing.JTextField threadsField -> c
    javax.swing.JLabel threadsLabel -> c
    javax.swing.JTextField timeoutField -> d
    javax.swing.JLabel timeoutLabel -> d
    javax.swing.JCheckBox useProxyCheck -> a
    void initComponents() -> a
    void cancelButtonActionPerformed(java.awt.event.ActionEvent) -> a
    void okButtonActionPerformed(java.awt.event.ActionEvent) -> b
    void useProxyCheckStateChanged(javax.swing.event.ChangeEvent) -> a
    void access$000(com.adlitteram.emailcruncher.gui.SettingsDialog,javax.swing.event.ChangeEvent) -> a
    void access$100(com.adlitteram.emailcruncher.gui.SettingsDialog,java.awt.event.ActionEvent) -> a
    void access$200(com.adlitteram.emailcruncher.gui.SettingsDialog,java.awt.event.ActionEvent) -> b
com.adlitteram.emailcruncher.gui.SettingsDialog$1 -> q:
    com.adlitteram.emailcruncher.gui.SettingsDialog this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.adlitteram.emailcruncher.gui.SettingsDialog$2 -> n:
    com.adlitteram.emailcruncher.gui.SettingsDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.gui.SettingsDialog$3 -> p:
    com.adlitteram.emailcruncher.gui.SettingsDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.emailcruncher.gui.widgets.FileChooser -> C:
    boolean isNative -> a
    java.awt.FileDialog awtChooser -> a
    javax.swing.JFileChooser swingChooser -> a
    java.awt.Component parent -> a
    java.lang.String title -> a
    int mode -> a
    java.io.File selectedFile -> a
    int showAwtDialog(int) -> a
    int showSwingDialog(int,java.lang.String) -> a
    int showSaveDialog() -> a
    int showSaveDialog(java.lang.String) -> a
    java.io.File getSelectedFile() -> a
    void setDirectory(java.lang.String) -> a
    void setFile(java.lang.String) -> b
    void addFileFilter(javax.swing.filechooser.FileFilter) -> a
    int access$000(com.adlitteram.emailcruncher.gui.widgets.FileChooser) -> a
    javax.swing.JFileChooser access$100(com.adlitteram.emailcruncher.gui.widgets.FileChooser) -> a
com.adlitteram.emailcruncher.gui.widgets.FileChooser$1 -> t:
    com.adlitteram.emailcruncher.gui.widgets.FileChooser this$0 -> a
    void approveSelection() -> approveSelection
com.adlitteram.emailcruncher.gui.widgets.FileChooser$2 -> k:
    javax.swing.filechooser.FileFilter val$ff -> a
    com.adlitteram.emailcruncher.gui.widgets.FileChooser this$0 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.adlitteram.emailcruncher.log.LogAreaHandler -> j:
    java.text.DateFormat formatter -> a
    javax.swing.JTextArea logArea -> a
    javax.swing.text.Document document -> a
    void reset() -> a
    void publish(java.util.logging.LogRecord) -> publish
    void close() -> close
    void flush() -> flush
    javax.swing.text.Document access$000(com.adlitteram.emailcruncher.log.LogAreaHandler) -> a
com.adlitteram.emailcruncher.log.LogAreaHandler$1 -> w:
    com.adlitteram.emailcruncher.log.LogAreaHandler this$0 -> a
    void run() -> run
com.adlitteram.emailcruncher.log.XLog -> A:
    java.util.logging.Logger logger -> a
    java.util.logging.Logger getLogger() -> a
    void addHandler(java.util.logging.Handler) -> a
    void info(java.lang.String) -> a
    void resetHandlers() -> a
com.adlitteram.emailcruncher.utils.GuiUtils -> K:
    java.lang.String INFO -> a
    java.lang.String ERROR -> b
    javax.swing.Icon HELP_ICON -> a
    javax.swing.Icon OPEN_ICON -> b
    void setDefaultLookAndFeel() -> a
    java.awt.Image loadImage(java.lang.String) -> a
    void showError(java.lang.Object) -> a
com.adlitteram.emailcruncher.utils.Plateform -> b:
    java.lang.String OS_NAME -> a
    java.lang.String OS_VERSION -> b
    java.lang.String JAVA_VERSION -> c
    java.lang.String JAVA_VENDOR -> d
    boolean MAC_OSX -> a
    boolean WINDOWS -> b
    boolean LINUX -> c
    boolean SUNOS -> d
    boolean isMacOSX() -> a
com.adlitteram.emailcruncher.utils.Utils -> y:
    void closeQuietly(java.io.Reader) -> a
    void closeQuietly(java.io.InputStream) -> a
    void execBrowser(java.lang.String) -> a
com.adlitteram.emailcruncher.utils.XFileFilter -> a:
    com.adlitteram.emailcruncher.utils.XFileFilter IMG -> a
    com.adlitteram.emailcruncher.utils.XFileFilter XLS -> b
    com.adlitteram.emailcruncher.utils.XFileFilter TXT -> c
    java.lang.String[] exts -> a
    java.lang.String desc -> a
    boolean acceptDir -> a
    boolean accept(java.io.File,java.lang.String) -> accept
    boolean accept(java.io.File) -> accept
    java.lang.String getDescription() -> getDescription
    java.lang.String getSuffix(java.lang.String) -> a
